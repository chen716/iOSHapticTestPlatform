org: sandeepzgk
app: vt-haptics-platform
service: api
frameworkVersion: '3'

custom:
  tableName: 'data-table-${sls:stage}'
  bucketName: 'haptic-bucket-${sls:stage}'
  dynamodb:
    start:
      migrate: false
    stages:
      - dev

provider:
  name: aws
  runtime: nodejs14.x
  timeout: 1
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [ DataTable, Arn ]
        - Effect: 'Allow'
          Action:
            - "s3:*Object"
          Resource:
             - Fn::GetAtt: [ StorageBucket, Arn ]
           

  environment:
    DATA_TABLE: ${self:custom.tableName}
    STORAGE_BUCKET: ${self:custom.bucketName}

functions:
  api:
    handler: handler.handler
    events:
      - httpApi: '*'

resources:
  Resources:
    DataTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: uuid
            AttributeType: S
          - AttributeName: email
            AttributeType: S
        KeySchema:
          - AttributeName: uuid
            KeyType: HASH
          - AttributeName: email
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.tableName}
    StorageBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.bucketName}
    
plugins:
  - serverless-dynamodb-local
  - serverless-offline
  - serverless-s3-local
